import React, { useEffect, useState } from "react";
import { Card, CardContent } from "@/components/ui/card";
import { Input } from "@/components/ui/input";
import { Button } from "@/components/ui/button";
import { Dialog, DialogContent, DialogTitle } from "@/components/ui/dialog";

const API_KEY = "your_api_key_here"; // Replace with your OMDB API key
const API_URL = "https://www.omdbapi.com/";

export default function IMDbClone() {
  const [search, setSearch] = useState("");
  const [movies, setMovies] = useState([]);
  const [loading, setLoading] = useState(false);
  const [selectedMovie, setSelectedMovie] = useState(null);

  const searchMovies = async () => {
    if (!search) return;
    setLoading(true);
    try {
      const response = await fetch(`${API_URL}?apikey=${API_KEY}&s=${search}`);
      const data = await response.json();
      setMovies(data.Search || []);
    } catch (error) {
      console.error("Failed to fetch movies", error);
    } finally {
      setLoading(false);
    }
  };

  const fetchMovieDetails = async (imdbID) => {
    try {
      const response = await fetch(`${API_URL}?apikey=${API_KEY}&i=${imdbID}`);
      const data = await response.json();
      setSelectedMovie(data);
    } catch (error) {
      console.error("Failed to fetch movie details", error);
    }
  };

  useEffect(() => {
    searchMovies(); // Optional initial search
  }, []);

  return (
    <div className="p-6 max-w-5xl mx-auto">
      <h1 className="text-3xl font-bold mb-4">IMDb Clone</h1>
      <div className="flex gap-2 mb-6">
        <Input
          placeholder="Search movies..."
          value={search}
          onChange={(e) => setSearch(e.target.value)}
          className="flex-1"
        />
        <Button onClick={searchMovies}>Search</Button>
      </div>

      {loading ? (
        <p>Loading...</p>
      ) : (
        <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4">
          {movies.map((movie) => (
            <Card
              key={movie.imdbID}
              className="overflow-hidden cursor-pointer hover:shadow-xl"
              onClick={() => fetchMovieDetails(movie.imdbID)}
            >
              <img
                src={movie.Poster !== "N/A" ? movie.Poster : "/placeholder.jpg"}
                alt={movie.Title}
                className="w-full h-72 object-cover"
              />
              <CardContent className="p-4">
                <h2 className="text-xl font-semibold truncate">{movie.Title}</h2>
                <p className="text-gray-600">{movie.Year}</p>
              </CardContent>
            </Card>
          ))}
        </div>
      )}

      <Dialog open={!!selectedMovie} onOpenChange={() => setSelectedMovie(null)}>
        <DialogContent>
          {selectedMovie && (
            <>
              <DialogTitle className="text-2xl font-bold mb-2">
                {selectedMovie.Title} ({selectedMovie.Year})
              </DialogTitle>
              <div className="flex flex-col md:flex-row gap-4">
                <img
                  src={
                    selectedMovie.Poster !== "N/A"
                      ? selectedMovie.Poster
                      : "/placeholder.jpg"
                  }
                  alt={selectedMovie.Title}
                  className="w-full md:w-1/3 object-cover"
                />
                <div>
                  <p className="mb-2"><strong>Genre:</strong> {selectedMovie.Genre}</p>
                  <p className="mb-2"><strong>Director:</strong> {selectedMovie.Director}</p>
                  <p className="mb-2"><strong>Plot:</strong> {selectedMovie.Plot}</p>
                  <p className="mb-2"><strong>IMDB Rating:</strong> {selectedMovie.imdbRating}</p>
                </div>
              </div>
            </>
          )}
        </DialogContent>
      </Dialog>
    </div>
  );
}
